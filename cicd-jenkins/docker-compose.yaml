services:
  # üîß Jenkins Master
  jenkins-master:
    image: jenkins/jenkins:custom-jdk21
    container_name: jenkins
    restart: unless-stopped
    user: 1000:1000
    ports:
      - "8081:8080"
      - "50000:50000"
    environment:
      JAVA_OPTS: "-Dhudson.security.csrf.GlobalCrumbIssuerStrategy=true -Djenkins.security.SystemReadPermission=true"
    volumes:
      - jenkins_home:/var/jenkins_home:rw
      - //var/run/docker.sock:/var/run/docker.sock
    networks:
      - jenkins_network
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp:size=2G
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/login || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  # üê≥ Docker in Docker (Daemon for Jenkins Agents)
  dind:
    image: docker:28.3.3-dind
    privileged: true
    container_name: jenkins-docker
    environment:
      DOCKER_TLS_CERTDIR: /certs
    volumes:
      - jenkins-docker-data:/var/lib/docker
      - jenkins-docker-certs:/certs/client
    networks:
      jenkins_network:
        aliases:
          - docker
    command: ["--storage-driver=overlay2", "--tlsverify", "-H", "tcp://0.0.0.0:2376"]
    healthcheck:
      test: ["CMD-SHELL", "docker --tlsverify --cert /certs/client/cert.pem --key /certs/client/key.pem --cacert /certs/client/ca.pem info"]
      interval: 1m
      timeout: 10s
      retries: 3

  # üîß Jenkins SSH Agent
  jenkins-agent:
    image: jenkins/ssh-agent:custom-deb-jdk21
    privileged: true
    user: root
    container_name: jenkins-agent
    restart: unless-stopped
    expose:
      - "22"
    environment:
      JENKINS_AGENT_SSH_PUBKEY: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDIssApkllSvVAK9XQnaN8997Dk8CsdUk9SzIfRP/M/o5rUTjCsSMG+tbQlNDLTz3JIBYWEsMWy7vQEeRsEPtJF6uX31m0m/oAQu0jUTNpycCn1XRo5gkWJl7BCizRW5DVd7PVu2ayKd8gt5YDfG4AHvEGbOtbrPQz0+PwNaxuw7yNHekhCyD3ugp4tcuC2cw2p0q6+b/ru76aG7uFMjysiOTrnnW9O0hP4aLu0bgomNI3lPzvIizxT6Tlvsrzp5U4H8pvXwTMDxm6q4Qc5DQ7qbBiyLitb9ZUZGEIlz4GzGFAzT87aboEH44pvcGF7rubLL7gXDJdX6ldUEi9FqEWWa5wWe8Ej4yxlNqtq+jqQMbJ7h20Q+BaQSbWn4FrjQeNMlP9eg/3akz8tBxyfrUuFUFYfrZFjJAFr/BL23VtUqURDaDaKSla69i41GaXXdOEpXEOHtxsWuGxktHtizYJIVSueqX5zTmS2ZXX+jmbvlgM5iRM6PFALCR2qIgHpsgFfo9ZO85p4hrZQVSBa4vl3pUDbLYw16K7g9iByIOC2tE9nhmv2C2v2f4XqZTVQ5EtHMVFvfW8QZmXKTCxah4RD7kNuWDH7xjQ9ulKer2t/22nkenhKtWVcxNG9UoVBMaiBbNbjb0XLJpJ2spcXmbZVHXJsdIGXLH0Z8TGZ91L3+Q== msi thin@MSI"
      DOCKER_HOST: "tcp://docker:2376"
      DOCKER_TLS_VERIFY: "1"
      DOCKER_CERT_PATH: "/certs/client"
    volumes:
      - jenkins_agent:/home/jenkins/agent:rw
      - jenkins-docker-certs:/certs/client:ro
    networks:
      - jenkins_network
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp:size=2G

  # üß† SonarQube
  sonarqube:
    container_name: sonarqube
    image: sonarqube:25.9.0.112764-community
    restart: unless-stopped
    depends_on:
      - sonar_db
    ports:
      - "9001:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar_db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp
    networks:
      - jenkins_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000 || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  # üêò Postgres for SonarQube
  sonar_db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - sonar_db:/var/lib/postgresql/data
    networks:
      - jenkins_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar -d sonar"]
      interval: 30s
      timeout: 10s
      retries: 5

# üîó Shared Network
networks:
  jenkins_network:
    driver: bridge

# üíæ Volumes
volumes:
  jenkins_home:
  jenkins_agent:
  jenkins-docker-data:
  jenkins-docker-certs:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp:
  sonar_db:
