pipeline {
    agent none

    environment {
        APP_DIR = './fastapi_app'
        SONARQUBE = credentials('sonarqube_token')
    }

    stages {
        stage('Checkout for CI') {
            agent { label 'docker-agent' }
            steps {
                git branch: 'main', url: 'https://github.com/psu6510110340/jenkins-sonarqube-dind.git'
            }
        }
        
        stage('Version') {
            agent { label 'docker-agent' }
            steps {
                echo 'Building...'
                sh 'python3 --version'
            }
        }
        
        stage('Install Dependencies') {
            agent { label 'docker-agent' }
            steps {
                echo 'Environment setup...'
                sh 'python3 -m venv .venv'
                sh '''
                    . .venv/bin/activate
                    pip install --upgrade pip
                    pip install -r ${APP_DIR}/requirements.txt
                    pip install pysonar pytest coverage pytest-cov
                '''
            }
        }

        stage('Run Tests & Coverage') {
            agent { label 'docker-agent' }
            steps {
                sh '''
                    . .venv/bin/activate
                    PYTHONPATH=./${APP_DIR} pytest ${APP_DIR}/tests
                '''
            }
        }
        
        stage('Run SonarQube') {
            agent { label 'docker-agent' }
            environment {
                SCANNER_HOME = tool 'sonar-scanner'
                // JDK_HOME = tool 'jdk9'
            }

            steps {
                withSonarQubeEnv('sonar-server') {
                    sh """
                        ${SCANNER_HOME}/bin/sonar-scanner \
                        -Dsonar.projectKey=fastapi-project-166 \
                        -Dsonar.projectName=fastapi-project-166 \
                        -Dsonar.sources=./${APP_DIR}/
                    """
                }
            }
        }
        

        stage('Quality Gate') {
            agent { label 'docker-agent' }
            steps {
                timeout(time: 2, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        
        stage('Checkout for CD') {
            agent { label 'master' }
            steps {
                git branch: 'main', url: 'https://github.com/psu6510110340/jenkins-sonarqube-dind.git'
            }
        }

        stage('Build Docker Image') {
            agent { label 'master' }
            steps {
                sh 'docker build -f ${APP_DIR}/Dockerfile -t fastapi-app:latest ${APP_DIR}'
            }
        }

        stage('Deploy Container') {
            agent { label 'master' }
            steps {
                sh '''
                    docker rm -f fastapi-app || true
                    docker run -d -p 8000:8000 --name fastapi-app fastapi-app:latest
                '''
            }
        }
    }

    post {
        always {
            echo "Pipeline finished"
        }
    }
}
